{"version":3,"sources":["../../src/app/guards/auth.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAGa,SAAS;gBAElB,mBAAoB,MAAa;oBAAb,WAAM,GAAN,MAAM,CAAO;gBACjC,CAAC;gBAED,+BAAW,GAAX,UAAY,KAA4B,EAAE,KAAyB;oBAC/D,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;wBACtC,2BAA2B;wBAC3B,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;oBAED,8DAA8D;oBAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,SAAS,EAAE,KAAK,CAAC,GAAG,EAAC,EAAC,CAAC,CAAC;oBAC1E,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBACL,gBAAC;YAAD,CAfA,AAeC,IAAA;YAfY,SAAS;gBADrB,iBAAU,EAAE;iDAGkB,eAAM;eAFxB,SAAS,CAerB;;QAAA,CAAC","file":"auth.guard.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router:Router) {\r\n    }\r\n\r\n    canActivate(route:ActivatedRouteSnapshot, state:RouterStateSnapshot) {\r\n        if (localStorage.getItem('currentUser')) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/welcome'], {queryParams: {returnUrl: state.url}});\r\n        return false;\r\n    }\r\n}"],"sourceRoot":"/src"}